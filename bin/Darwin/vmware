#!/bin/bash
# ~/bin/vm
#
# Shortcut to VMWare tools for starting and stopping headless VMs
# (I got tired of opening the VMWare Fusion application every time)

# TODO:
# * Show running VMs and enable stopping
# * Check VMWare exists and exit if it doesn't (cross-platform)

VM_DIR="${HOME}/Documents/Virtual Machines.localized"
VM_RUN="/Applications/VMware Fusion.app/Contents/Library/vmrun"
VMS=$(find "${VM_DIR}" -name "*.vmwarevm" | grep -v 'Win' | grep -Fv 'template.vmwarevm' | xargs -I% basename -s ".vmwarevm" "%")


op=${1:-start}
shift 1

if [ "$op" = "help" ] || [ "$op" = '-?' ] || [ "$op" == "--help" ]; then
    exec "${VM_RUN}" "--help"
fi

OLD_IFS=${IFS}; IFS="
"

declare -a opts
declare -a args
function split_opts() {

  while [ $# -gt 0 ]; do
    case "$1" in
      -gu|-gp|-vp|-p|-u|-T|-P|-h)
        opts=( "${opts[@]}" "$1" "$2" )
        shift 2;
      ;;
      *)
        args=( "$@" )
        shift "$#"
      ;;
    esac;
  done
}


[ "$op" = "start" ] && args=(nogui "${args[@]}")

case "$op" in
  list | help | -? | --help)
    "${VM_RUN}" "$op"
  ;;
  *)
    split_opts "$@"

    echo "Choose a non-Windows VM to $op:"

    # path separators so I can use spaces in filenames

    select vm in $VMS ; do
        # run file
        "${VM_RUN}" "${opts[@]}" "$op" "${vm}.vmwarevm" "${args[*]}"
        exit=$?
        # repair IFS
        IFS=${OLD_IFS}
        exit $exit
    done
  ;;
esac

IFS=${OLD_IFS}
exit 1
